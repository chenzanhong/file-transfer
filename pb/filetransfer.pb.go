// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: pb/filetransfer.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Server        string                 `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	User          string                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Auth          string                 `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
	FileData      []byte                 `protobuf:"bytes,5,opt,name=file_data,json=fileData,proto3" json:"file_data,omitempty"` // 上传的文件二进制数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommonUploadRequest) Reset() {
	*x = CommonUploadRequest{}
	mi := &file_pb_filetransfer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommonUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonUploadRequest) ProtoMessage() {}

func (x *CommonUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_filetransfer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonUploadRequest.ProtoReflect.Descriptor instead.
func (*CommonUploadRequest) Descriptor() ([]byte, []int) {
	return file_pb_filetransfer_proto_rawDescGZIP(), []int{0}
}

func (x *CommonUploadRequest) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *CommonUploadRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CommonUploadRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CommonUploadRequest) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

func (x *CommonUploadRequest) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

type CommonUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommonUploadResponse) Reset() {
	*x = CommonUploadResponse{}
	mi := &file_pb_filetransfer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommonUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonUploadResponse) ProtoMessage() {}

func (x *CommonUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_filetransfer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonUploadResponse.ProtoReflect.Descriptor instead.
func (*CommonUploadResponse) Descriptor() ([]byte, []int) {
	return file_pb_filetransfer_proto_rawDescGZIP(), []int{1}
}

func (x *CommonUploadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CommonDownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Server        string                 `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	User          string                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Auth          string                 `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommonDownloadRequest) Reset() {
	*x = CommonDownloadRequest{}
	mi := &file_pb_filetransfer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommonDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonDownloadRequest) ProtoMessage() {}

func (x *CommonDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_filetransfer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonDownloadRequest.ProtoReflect.Descriptor instead.
func (*CommonDownloadRequest) Descriptor() ([]byte, []int) {
	return file_pb_filetransfer_proto_rawDescGZIP(), []int{2}
}

func (x *CommonDownloadRequest) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *CommonDownloadRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CommonDownloadRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CommonDownloadRequest) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

type FileChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	mi := &file_pb_filetransfer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_pb_filetransfer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_pb_filetransfer_proto_rawDescGZIP(), []int{3}
}

func (x *FileChunk) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type TransferBetweenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceServer  string                 `protobuf:"bytes,1,opt,name=source_server,json=sourceServer,proto3" json:"source_server,omitempty"`
	TargetServer  string                 `protobuf:"bytes,2,opt,name=target_server,json=targetServer,proto3" json:"target_server,omitempty"`
	SourcePath    string                 `protobuf:"bytes,3,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	TargetPath    string                 `protobuf:"bytes,4,opt,name=target_path,json=targetPath,proto3" json:"target_path,omitempty"`
	SourceUser    string                 `protobuf:"bytes,5,opt,name=source_user,json=sourceUser,proto3" json:"source_user,omitempty"`
	TargetUser    string                 `protobuf:"bytes,6,opt,name=target_user,json=targetUser,proto3" json:"target_user,omitempty"`
	SourceAuth    string                 `protobuf:"bytes,7,opt,name=source_auth,json=sourceAuth,proto3" json:"source_auth,omitempty"`
	TargetAuth    string                 `protobuf:"bytes,8,opt,name=target_auth,json=targetAuth,proto3" json:"target_auth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferBetweenRequest) Reset() {
	*x = TransferBetweenRequest{}
	mi := &file_pb_filetransfer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferBetweenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferBetweenRequest) ProtoMessage() {}

func (x *TransferBetweenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_filetransfer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferBetweenRequest.ProtoReflect.Descriptor instead.
func (*TransferBetweenRequest) Descriptor() ([]byte, []int) {
	return file_pb_filetransfer_proto_rawDescGZIP(), []int{4}
}

func (x *TransferBetweenRequest) GetSourceServer() string {
	if x != nil {
		return x.SourceServer
	}
	return ""
}

func (x *TransferBetweenRequest) GetTargetServer() string {
	if x != nil {
		return x.TargetServer
	}
	return ""
}

func (x *TransferBetweenRequest) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *TransferBetweenRequest) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

func (x *TransferBetweenRequest) GetSourceUser() string {
	if x != nil {
		return x.SourceUser
	}
	return ""
}

func (x *TransferBetweenRequest) GetTargetUser() string {
	if x != nil {
		return x.TargetUser
	}
	return ""
}

func (x *TransferBetweenRequest) GetSourceAuth() string {
	if x != nil {
		return x.SourceAuth
	}
	return ""
}

func (x *TransferBetweenRequest) GetTargetAuth() string {
	if x != nil {
		return x.TargetAuth
	}
	return ""
}

type TransferResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferResponse) Reset() {
	*x = TransferResponse{}
	mi := &file_pb_filetransfer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResponse) ProtoMessage() {}

func (x *TransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_filetransfer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResponse.ProtoReflect.Descriptor instead.
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return file_pb_filetransfer_proto_rawDescGZIP(), []int{5}
}

func (x *TransferResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_pb_filetransfer_proto protoreflect.FileDescriptor

const file_pb_filetransfer_proto_rawDesc = "" +
	"\n" +
	"\x15pb/filetransfer.proto\x12\ffiletransfer\"\x86\x01\n" +
	"\x13CommonUploadRequest\x12\x16\n" +
	"\x06server\x18\x01 \x01(\tR\x06server\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12\x12\n" +
	"\x04auth\x18\x04 \x01(\tR\x04auth\x12\x1b\n" +
	"\tfile_data\x18\x05 \x01(\fR\bfileData\"0\n" +
	"\x14CommonUploadResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"k\n" +
	"\x15CommonDownloadRequest\x12\x16\n" +
	"\x06server\x18\x01 \x01(\tR\x06server\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12\x12\n" +
	"\x04auth\x18\x04 \x01(\tR\x04auth\"%\n" +
	"\tFileChunk\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\"\xa8\x02\n" +
	"\x16TransferBetweenRequest\x12#\n" +
	"\rsource_server\x18\x01 \x01(\tR\fsourceServer\x12#\n" +
	"\rtarget_server\x18\x02 \x01(\tR\ftargetServer\x12\x1f\n" +
	"\vsource_path\x18\x03 \x01(\tR\n" +
	"sourcePath\x12\x1f\n" +
	"\vtarget_path\x18\x04 \x01(\tR\n" +
	"targetPath\x12\x1f\n" +
	"\vsource_user\x18\x05 \x01(\tR\n" +
	"sourceUser\x12\x1f\n" +
	"\vtarget_user\x18\x06 \x01(\tR\n" +
	"targetUser\x12\x1f\n" +
	"\vsource_auth\x18\a \x01(\tR\n" +
	"sourceAuth\x12\x1f\n" +
	"\vtarget_auth\x18\b \x01(\tR\n" +
	"targetAuth\",\n" +
	"\x10TransferResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2\xa1\x02\n" +
	"\x13FileTransferService\x12U\n" +
	"\fCommonUpload\x12!.filetransfer.CommonUploadRequest\x1a\".filetransfer.CommonUploadResponse\x12P\n" +
	"\x0eCommonDownload\x12#.filetransfer.CommonDownloadRequest\x1a\x17.filetransfer.FileChunk0\x01\x12a\n" +
	"\x19TransferBetweenTwoServers\x12$.filetransfer.TransferBetweenRequest\x1a\x1e.filetransfer.TransferResponseB\x12Z\x10file-transfer/pbb\x06proto3"

var (
	file_pb_filetransfer_proto_rawDescOnce sync.Once
	file_pb_filetransfer_proto_rawDescData []byte
)

func file_pb_filetransfer_proto_rawDescGZIP() []byte {
	file_pb_filetransfer_proto_rawDescOnce.Do(func() {
		file_pb_filetransfer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pb_filetransfer_proto_rawDesc), len(file_pb_filetransfer_proto_rawDesc)))
	})
	return file_pb_filetransfer_proto_rawDescData
}

var file_pb_filetransfer_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pb_filetransfer_proto_goTypes = []any{
	(*CommonUploadRequest)(nil),    // 0: filetransfer.CommonUploadRequest
	(*CommonUploadResponse)(nil),   // 1: filetransfer.CommonUploadResponse
	(*CommonDownloadRequest)(nil),  // 2: filetransfer.CommonDownloadRequest
	(*FileChunk)(nil),              // 3: filetransfer.FileChunk
	(*TransferBetweenRequest)(nil), // 4: filetransfer.TransferBetweenRequest
	(*TransferResponse)(nil),       // 5: filetransfer.TransferResponse
}
var file_pb_filetransfer_proto_depIdxs = []int32{
	0, // 0: filetransfer.FileTransferService.CommonUpload:input_type -> filetransfer.CommonUploadRequest
	2, // 1: filetransfer.FileTransferService.CommonDownload:input_type -> filetransfer.CommonDownloadRequest
	4, // 2: filetransfer.FileTransferService.TransferBetweenTwoServers:input_type -> filetransfer.TransferBetweenRequest
	1, // 3: filetransfer.FileTransferService.CommonUpload:output_type -> filetransfer.CommonUploadResponse
	3, // 4: filetransfer.FileTransferService.CommonDownload:output_type -> filetransfer.FileChunk
	5, // 5: filetransfer.FileTransferService.TransferBetweenTwoServers:output_type -> filetransfer.TransferResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pb_filetransfer_proto_init() }
func file_pb_filetransfer_proto_init() {
	if File_pb_filetransfer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pb_filetransfer_proto_rawDesc), len(file_pb_filetransfer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_filetransfer_proto_goTypes,
		DependencyIndexes: file_pb_filetransfer_proto_depIdxs,
		MessageInfos:      file_pb_filetransfer_proto_msgTypes,
	}.Build()
	File_pb_filetransfer_proto = out.File
	file_pb_filetransfer_proto_goTypes = nil
	file_pb_filetransfer_proto_depIdxs = nil
}
